@model IEnumerable<DepartmentViewModel>
@{
    ViewData["Title"] = "Index";
    string VDataMessage = ViewData["Message"] as string; // It is strongly typed so it needs casting
    string VBagMessage = ViewBag.Message; //Can't enforce type Safety , it does not need casting as it run in the run time. Weakly typed

}
@*
<div class="alert alert-success">
    @ViewData["Message"]
</div> *@

@* <div class="alert alert-success">
    @ViewBag.Message
</div> *@
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}


<h1>All Departments</h1>
<br />
<br />
<a asp-controller="Department" asp-action="Create" class="btn btn-primary">Create New Department</a>
<partial name="_SearchPartialView">
@*Lw anta fy view mo3aiaan w 3aiiz troo7 3la view tanii fy nafs al controller m4 me7taag tekteb asm al conroller*@

@if (Model.Count() > 0)
{
    <table class="mt-3 table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(D => D.Code)</th>
                <th>@Html.DisplayNameFor(D => D.Name)</th>
                <th>@Html.DisplayNameFor(D => D.DateOfCreation)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var department in Model)
            {
                <tr>
                    <td>@department.Code</td>
                    <td>@department.Name</td>
                    <td>@department.DateOfCreation</td>
                    <partial name="_ButtonsPartialView" model="@department.Id"/>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-5 alert alert-warning">
        <h3>There is no departments</h3>
    </div>
}

